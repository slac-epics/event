#
# Basic SLAC EVR Substitutions file
# Set event specific variations here.
#
# This file also gets processed via msi to produce
# $(EVENT)/db/evrSLAC.db
# You can load that file directly from st.cmd if all
# you need is a generic card 0 SLAC EVR instance.
#
# Example:
# dbLoadRecords( "db/evrSLAC.db", "EVR=AMO:R06:EVR:19,CARD=0" )
#
# If you need to customize the initial starting database,
# or create a non-std EVR database, this basic substitutions
# file can be used as a starting point.  Add macro values for
# any macros in the template files where you want something
# other than the default.

# Need one instance of evrSLAC for the card
file evrSLAC.template
{
	{	DEV = "$(EVR)"	}
}


# Need twelve instances of evrDevTrig for 12 front panel outputs
#
# Required macros:
#	EVR  - EVR PV prefix
#	TRIG - Trigger PV prefix
#	TCTL - Trigger control (enable) field, one of DG0E, DG1E, DG2E, OTP0, ..., OTPD
#	TPOL - Trigger polarity field, one of DG0P, DG1P, DG2P, OT0P, ..., OTDP
#	TWID - Trigger width field, one of DG0W, DG1W, DG2W, OT0W, ..., OTDW
#	TDES - Trigger desired delay field, one of DG0D, DG1D, DG2D, OT0D, ..., OTDD
#	TOUT - Trigger output field, one of OUT0, OUT1, OUT2, ..., OUTA, OUTB, OUTC, OUTD
file evrDevTrig.db
{
	pattern
	{	TRIG,			TCTL,	TPOL,	TWID,	TDES,	TOUT	}
	{	$(EVR):TRIG0,	DG0E,	DG0P,	DG0W,	DG0D,	OUT0	}
	{	$(EVR):TRIG1,	DG1E,	DG1P,	DG1W,	DG1D,	OUT1	}
	{	$(EVR):TRIG2,	DG2E,	DG2P,	DG2W,	DG2D,	OUT2	}
	{	$(EVR):TRIG3,	DG3E,	DG3P,	DG3W,	DG3D,	OUT3	}
	{	$(EVR):TRIG4,	DG4E,	DG4P,	DG4W,	DG4D,	OUT4	}
	{	$(EVR):TRIG5,	DG5E,	DG5P,	DG5W,	DG5D,	OUT5	}
	{	$(EVR):TRIG6,	DG6E,	DG6P,	DG6W,	DG6D,	OUT6	}
	{	$(EVR):TRIG7,	DG7E,	DG7P,	DG7W,	DG7D,	OUT7	}
	{	$(EVR):TRIG8,	DG8E,	DG8P,	DG8W,	DG8D,	OUT8	}
	{	$(EVR):TRIG9,	DG9E,	DG9P,	DG9W,	DG9D,	OUT9	}
	{	$(EVR):TRIGA,	DGAE,	DGAP,	DGAW,	DGAD,	OUTA	}
	{	$(EVR):TRIGB,	DGBE,	DGBP,	DGBW,	DGBD,	OUTB	}
}


#
# Create 14 event controls
#
#   DEV     Name of EVR
#   NAME    EVENT1 to EVENT14 - instantiate all 14 records even if you only use a few events.
#   ID  	Event code number.
file evrPmcEvent.template
{
#     Device    <------Event ------------------>       
    pattern
    { DEV,      NAME,    ID,  LNAME             }
    { $(EVR),   EVENT1, 140,  "Beam Full"       }
    { $(EVR),   EVENT2, 141,  "Beam & 60Hz"     }
    { $(EVR),   EVENT3, 142,  "Beam & 30Hz"     }
    { $(EVR),   EVENT4, 143,  "Beam & 10Hz"     }
    { $(EVR),   EVENT5, 144,  "Beam & 5Hz"      }
    { $(EVR),   EVENT6, 145,  "Beam & 1Hz"      }
    { $(EVR),   EVENT7, 146,  "Beam & 0.5Hz"    }
    { $(EVR),   EVENT8,  40,  "120Hz"           }
    { $(EVR),   EVENT9,  41,  "60Hz"            }
    { $(EVR),   EVENT10, 42,  "30Hz"            }
    { $(EVR),   EVENT11, 43,  "10Hz"            }
    { $(EVR),   EVENT12, 44,  "5Hz"             }
    { $(EVR),   EVENT13, 45,  "1Hz"             }
    { $(EVR),   EVENT14, 46,  "0.5Hz"           }
}

# Need one instance of fiducialTimestamp.db for
# pattern processing and fiduicial ID timestamping
file fiducialTimestamp.db
{
    { DEV=$(EVR) }
}

#
# Creates records to support the event sequencer
# event codes for the LCLS accelerator and PCDS experiments
file pcdsEventCodes.db
{
   { DEV="$(EVR)", EVG="EVNT:SYS0" }
}


