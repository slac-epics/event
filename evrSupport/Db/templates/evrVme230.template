#
# file: evrVme230.template
# abstract:
#	This template creates records supporting the high level
#	device control and link status of an MRF evrVme230 module.
#	Each IOC that support an evr should instantiate one instance
#	of this template.
#
# Required Macros:
#	DEV		- Device Prefix
# Optional Macros, default in parenthsis:
# 	CARD	- Card number (0)
#	FP0L	- Front Panel Trigger 0 Label (Output 0)
#	FP1L	- Front Panel Trigger 1 Label (Output 1)
#	FP2L	- Front Panel Trigger 2 Label (Output 2)
#	FP3L	- Front Panel Trigger 3 Label (Output 3)
#	FP4L	- Front Panel Trigger 4 Label (Output 4)
#	FP5L	- Front Panel Trigger 5 Label (Output 5)
#	FP6L	- Front Panel Trigger 6 Label (Output 6)
#	WIDTH	- Output Trigger 0-13 Width (1)
#	DELAY	- Output Trigger 0-13 Delay (0)
#	DG0E	- Extended Delay Trigger 0 Enable (Disable)
#	DG1E	- Extended Delay Trigger 1 Enable (Disable)
#	DG2E	- Extended Delay Trigger 2 Enable (Disable)
#	DG3E	- Extended Delay Trigger 3 Enable (Disable)
#	DG0P	- Extended Delay Trigger 0 Polarity (Normal)
#	DG1P	- Extended Delay Trigger 1 Polarity (Normal)
#	DG2P	- Extended Delay Trigger 2 Polarity (Normal)
#	DG3P	- Extended Delay Trigger 3 Polarity (Normal)
#	DG0W	- Extended Delay Trigger 0 Width (1)
#	DG1W	- Extended Delay Trigger 1 Width (1)
#	DG2W	- Extended Delay Trigger 2 Width (1)
#	DG3W	- Extended Delay Trigger 3 Width (1)
#	DG0D	- Extended Delay Trigger 0 Delay (0)
#	DG1D	- Extended Delay Trigger 1 Delay (0)
#	DG2D	- Extended Delay Trigger 2 Delay (0)
#	DG3D	- Extended Delay Trigger 3 Delay (0)
#	DG0C	- Extended Delay Trigger 0 Scale factor (119)
#	DG1C	- Extended Delay Trigger 1 Scale factor (119)
#	DG2C	- Extended Delay Trigger 2 Scale factor (119)
#	DG3C	- Extended Delay Trigger 3 Scale factor (119)
#
# On the VME version of the EVR we need to support all trigger outputs
#
# For the trigger sources (TRIGX_SRC) the following are valid:
# 0 = Extended Delay Trigger 0 (DG0)
# 1 = Extended Delay Trigger 1 (DG1)
# 2 = Extended Delay Trigger 2 (DG2)
# 3 = Extended Delay Trigger 3 (DG3)
# 4 = Trigger 0 (TRG0)
# 5 = Trigger 1 (TRG1)
# 6 = Trigger 2 (TRG2)
# 7 = Trigger 3 (TRG3)
# 8 = Trigger 4 (TRG4)
# 9 = Trigger 5 (TRG5)
# 10 = Trigger 6 (TRG6)
# 11 = Programmable Width Pulse 0 (OTP0)
# 12 = Programmable Width Pulse 1 (OTP1)
# 13 = Programmable Width Pulse 2 (OTP2)
# 14 = Programmable Width Pulse 3 (OTP3)
# 15 = Programmable Width Pulse 4 (OTP4)
# 16 = Programmable Width Pulse 5 (OTP5)
# 17 = Programmable Width Pulse 6 (OTP6)
# 18 = Programmable Width Pulse 7 (OTP7)
# 19 = Programmable Width Pulse 8 (OTP8)
# 20 = Programmable Width Pulse 9 (OTP9)
# 21 = Programmable Width Pulse A (OTPA)
# 22 = Programmable Width Pulse B (OTPB)
# 23 = Programmable Width Pulse C (OTPC)
# 24 = Programmable Width Pulse D (OTPD)
# 63 = Disabled
#
record(er, "$(DEV):CTRL")
{
  field(DESC, "$(DEV) Control")
  field(DTYP, "MRF Event Receiver")
  field(OUT, "#C$(CARD=0) S0 @")
  field(PINI, "YES")
  field(ENAB, "YES")
  field(FPS0, "0")
  field(FPS1, "1")
  field(FPS2, "2")
  field(FPS3, "3")
  field(TRG0, "Enabled")
  field(TRG1, "Enabled")
  field(TRG2, "Enabled")
  field(TRG3, "Enabled")
  field(TRG4, "Enabled")
  field(TRG5, "Enabled")
  field(TRG6, "Enabled")
  field(OTP0, "Enabled")
  field(OTP1, "Enabled")
  field(OTP2, "Enabled")
  field(OTP3, "Enabled")
  field(OTP4, "Enabled")
  field(OTP5, "Enabled")
  field(OTP6, "Enabled")
  field(OTP7, "Enabled")
  field(OTP8, "Enabled")
  field(OTP9, "Enabled")
  field(OTPA, "Enabled")
  field(OTPB, "Enabled")
  field(OTPC, "Enabled")
  field(OTPD, "Enabled")
  field(OT0W, "$(WIDTH=1)")
  field(OT1W, "$(WIDTH=1)")
  field(OT2W, "$(WIDTH=1)")
  field(OT3W, "$(WIDTH=1)")
  field(OT4W, "$(WIDTH=1)")
  field(OT5W, "$(WIDTH=1)")
  field(OT6W, "$(WIDTH=1)")
  field(OT7W, "$(WIDTH=1)")
  field(OT8W, "$(WIDTH=1)")
  field(OT9W, "$(WIDTH=1)")
  field(OTAW, "$(WIDTH=1)")
  field(OTBW, "$(WIDTH=1)")
  field(OTCW, "$(WIDTH=1)")
  field(OTDW, "$(WIDTH=1)")
  field(OT0D, "$(DELAY=0)")
  field(OT1D, "$(DELAY=0)")
  field(OT2D, "$(DELAY=0)")
  field(OT3D, "$(DELAY=0)")
  field(OT4D, "$(DELAY=0)")
  field(OT5D, "$(DELAY=0)")
  field(OT6D, "$(DELAY=0)")
  field(OT7D, "$(DELAY=0)")
  field(OT8D, "$(DELAY=0)")
  field(OT9D, "$(DELAY=0)")
  field(OTAD, "$(DELAY=0)")
  field(OTBD, "$(DELAY=0)")
  field(OTCD, "$(DELAY=0)")
  field(OTDD, "$(DELAY=0)")
#Extended Delay Triggers
  field(DG0E, "$(DG0E=Disabled)")
  field(DG1E, "$(DG1E=Disabled)")
  field(DG2E, "$(DG2E=Disabled)")
  field(DG0W, "$(DG0W=1)")
  field(DG1W, "$(DG1W=1)")
  field(DG2W, "$(DG2W=1)")
  field(DG0D, "$(DG0D=0)")
  field(DG1D, "$(DG1D=0)")
  field(DG2D, "$(DG2D=0)")
  field(DG0C, "$(DG0C=119)")
  field(DG1C, "$(DG1C=119)")
  field(DG2C, "$(DG2C=119)")
  field(DG0P, "$(DG0P=Normal)")
  field(DG1P, "$(DG1P=Normal)")
  field(DG2P, "$(DG2P=Normal)")

  field(PRES, "1")
}

record(bi, "$(DEV):LINK")
{
  field(DESC, "$(DEV) Link Status")
  field(DTYP, "MRF Event Receiver")
  field(INP,  "#C$(CARD=0) S0 @")
  field(PINI, "YES")
  field(SCAN, "1 second")
  field(ZSV, "MAJOR")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(calc, "$(DEV):_CALC_STATUS")
{
  field(DESC, "Calc evr Status")
  field(CALC, "L=0?0:E+1")
  field(INPL, "$(DEV):LINK CPP MS")
  field(INPE, "$(DEV):CTRL.ENAB CPP MS")
  field(FLNK, "$(DEV):STATUS PP MS")
}

record(mbbi, "$(DEV):STATUS")
{
  field(DESC, "evr Status")
  field(INP, "$(DEV):_CALC_STATUS NPP MS")
  field(ZRVL, "0")
  field(ZRST, "FAIL")
  field(ZRSV, "MAJOR")
  field(ONVL, "1")
  field(ONST, "OFF")
  field(ONSV, "MINOR")
  field(TWVL, "2")
  field(TWST, "ON")
  field(TWSV, "NO_ALARM")
  field(UNSV, "INVALID")
}

record(stringout, "$(DEV):FP0L")
{
  field(DESC, "$(FP0L=Output 0)")
  field(PINI, "YES")
  field(VAL,  "$(FP0L=Output 0)")
}

record(stringout, "$(DEV):FP1L")
{
  field(DESC, "$(FP1L=Output 1)")
  field(PINI, "YES")
  field(VAL,  "$(FP1L=Output 1)")
}

record(stringout, "$(DEV):FP2L")
{
  field(DESC, "$(FP2L=Output 2)")
  field(PINI, "YES")
  field(VAL,  "$(FP2L=Output 2)")
}

record(stringout, "$(DEV):FP3L")
{
  field(DESC, "$(FP3L=Output 3)")
  field(PINI, "YES")
  field(VAL,  "$(FP3L=Output 3)")
}

record(stringout, "$(DEV):FP4L")
{
  field(DESC, "$(FP4L=Output 4)")
  field(PINI, "YES")
  field(VAL,  "$(FP4L=Output 4)")
}

record(stringout, "$(DEV):FP5L")
{
  field(DESC, "$(FP5L=Output 5)")
  field(PINI, "YES")
  field(VAL,  "$(FP5L=Output 5)")
}

record(stringout, "$(DEV):FP6L")
{
  field(DESC, "$(FP6L=Output 6)")
  field(PINI, "YES")
  field(VAL,  "$(FP6L=Output 6)")
}

record(ai, "$(DEV):LINKERRCNT")
{
  field(DESC, "$(DEV) Link Errors")
  field(INP, "$(DEV):CTRL.TAXI MS")
  field(SCAN, "2 second")
}

record(calc, "$(DEV):LINKERR")
{
  field(DESC, "EVR Recent Link Errors")
  field(INPA, "$(DEV):LINKERRCNT MS")
  field(INPB, "$(DEV):LINKERR.LA")
  field(SCAN, "2 second")
  field(CALC, "A<B?A:A-B")
  field(HIHI, "2")
  field(HIGH, "1")
  field(HHSV, "MAJOR")
  field(HSV,  "MINOR")
}

record(bo, "$(DEV):LINKERRRST")
{
  field(DESC, "EVR Err Count Reset")
  field(OUT, "$(DEV):CTRL.RXVR PP")
  field(PINI, "YES")
  field(DOL, "1")
  field(OMSL, "closed_loop")
  field(ZNAM, "NoReset")
  field(ONAM, "Reset")
  field(FLNK, "$(DEV):LINKERRRSTTOD")
}

record(stringin, "$(DEV):LINKERRRSTTOD")
{
  field(DESC, "EVR Err Count Reset Time")
  field(DTYP, "Soft Timestamp")
  field(INP, "@%m/%d/%y %H:%M:%S")
}
